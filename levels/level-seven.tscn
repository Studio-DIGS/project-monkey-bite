[gd_scene load_steps=19 format=3 uid="uid://cbwg2hodwxmba"]

[ext_resource type="PackedScene" uid="uid://ceg0a8jxwnfae" path="res://player/player.tscn" id="1_nrkkl"]
[ext_resource type="PackedScene" uid="uid://4vymcd4lcm3x" path="res://visual_pipeline/camera/camera_system.tscn" id="2_gcm0n"]
[ext_resource type="PackedScene" uid="uid://bfg1ub413xc20" path="res://enemies/Schmovosaur/Schmovosaur Enemy.tscn" id="3_6ptj7"]
[ext_resource type="PackedScene" uid="uid://j5u21dt7qegf" path="res://assets/lillian-assets/Textures/dock.tscn" id="4_bojc1"]
[ext_resource type="PackedScene" uid="uid://r2hi5m0cek01" path="res://common/level_switcher.tscn" id="5_h4dfl"]
[ext_resource type="PackedScene" uid="uid://b872c7eus500g" path="res://assets/Chunky Islands-20240415T205324Z-001/Chunky Islands/island 3 bald.glb" id="6_sxj7l"]
[ext_resource type="PackedScene" uid="uid://dhwn4oc3kqjg7" path="res://assets/lillian-assets/wood platform.glb" id="7_peli5"]
[ext_resource type="PackedScene" uid="uid://et186fsdj0ma" path="res://assets/lillian-assets/dock.glb" id="8_4xd6b"]
[ext_resource type="PackedScene" uid="uid://cgg8tr8eaax6m" path="res://assets/Chunky Islands-20240415T205324Z-001/Chunky Islands/island 4 bald.glb" id="9_v6qtu"]

[sub_resource type="Shader" id="Shader_vd8ur"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;

uniform sampler2D cloud_texture;
uniform sampler2D cloud_texture2;
uniform vec2 cloud_direction;
uniform vec2 cloud_direction2;
uniform vec2 cloud_scale;
uniform float cloud_distance;
uniform float cloud_speed;
uniform float cloud_speed2;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;
	
	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	float fps = floor(TIME * 2.0) * 0.05;
	vec3 clouds = texture(cloud_texture, sky_uv * cloud_scale * cloud_direction * cloud_speed * fps).rgb - texture(cloud_texture2, sky_uv * cloud_scale * cloud_direction2 * cloud_speed2 * fps).rgb;
	clouds = clouds - smoothstep(0.0, EYEDIR.y, cloud_distance);
	clouds = step(0.3, clouds); // Toon shade
	clouds = clamp(clouds, 0.0, 1.0);
	sky += clouds;
	ground += clouds;

	COLOR = mix(ground, sky, step(0.0, EYEDIR.y));
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_pndxn"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_qe2md"]
width = 1024
height = 1024
seamless = true
noise = SubResource("FastNoiseLite_pndxn")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_h8mcs"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_mfdm4"]
width = 1024
height = 1024
seamless = true
noise = SubResource("FastNoiseLite_h8mcs")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_v5xsb"]
shader = SubResource("Shader_vd8ur")
shader_parameter/sky_top_color = Color(0.168627, 0.466667, 0.713726, 1)
shader_parameter/sky_horizon_color = Color(0.509804, 0.701961, 0.85098, 1)
shader_parameter/sky_curve = 0.0776449
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.384314, 0.654902, 0.823529, 1)
shader_parameter/ground_horizon_color = Color(0.494118, 0.713726, 0.839216, 1)
shader_parameter/ground_curve = 0.0428708
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.375
shader_parameter/cloud_direction = Vector2(0.47, 0.355)
shader_parameter/cloud_direction2 = Vector2(1.585, 0.17)
shader_parameter/cloud_scale = Vector2(0.04, 2.74)
shader_parameter/cloud_distance = 0.0
shader_parameter/cloud_speed = 0.05
shader_parameter/cloud_speed2 = 0.015
shader_parameter/cloud_texture = SubResource("NoiseTexture2D_qe2md")
shader_parameter/cloud_texture2 = SubResource("NoiseTexture2D_mfdm4")

[sub_resource type="Sky" id="Sky_xpkr3"]
sky_material = SubResource("ShaderMaterial_v5xsb")

[sub_resource type="Environment" id="Environment_y8ynd"]
background_mode = 2
background_color = Color(0.4, 0.615686, 0.811765, 1)
sky = SubResource("Sky_xpkr3")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_1i5cd"]

[node name="World" type="Node3D"]

[node name="Characters Scripts and World Settings" type="Node" parent="."]

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="Characters Scripts and World Settings"]
transform = Transform3D(-0.422618, -0.800222, 0.425486, 0, 0.469472, 0.882947, -0.906308, 0.373149, -0.198407, 0, 0, 0)
shadow_enabled = true
shadow_blur = 1.745
directional_shadow_mode = 1
directional_shadow_split_1 = 0.003

[node name="WorldEnvironment" type="WorldEnvironment" parent="Characters Scripts and World Settings"]
environment = SubResource("Environment_y8ynd")

[node name="Player" parent="Characters Scripts and World Settings" instance=ExtResource("1_nrkkl")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -9.18653, 3.65063, -0.471166)
accel = 6.505

[node name="CameraSystem" parent="Characters Scripts and World Settings" node_paths=PackedStringArray("target") instance=ExtResource("2_gcm0n")]
target = NodePath("../Player")

[node name="Schmovosaur" parent="Characters Scripts and World Settings" instance=ExtResource("3_6ptj7")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6.12302, 0.874229, -0.0615408)

[node name="Environment" type="Node3D" parent="."]

[node name="dock" type="Node" parent="Environment"]

[node name="dock" parent="Environment/dock" instance=ExtResource("4_bojc1")]
transform = Transform3D(-1.00658, 0.0319816, -2.9573, 0.292051, 2.99643, 0.00755343, -5.90775, 0.14268, 0.504247, 90.8657, -27.1743, -20.788)

[node name="dock2" parent="Environment/dock" instance=ExtResource("4_bojc1")]
transform = Transform3D(1.00658, 0.0319817, -2.9573, -0.292052, 2.99643, 0.00755343, 5.90775, 0.142681, 0.504247, 95.5631, -28.5372, 6.78149)

[node name="collision box1" type="CSGBox3D" parent="Environment/dock"]
transform = Transform3D(0.340735, 0.00587866, -6.44165, -0.0988622, 0.550784, 0.0164529, 1.99983, 0.0262266, 1.09836, 91.1307, -31.1749, -6.73016)
visible = false
material_override = SubResource("StandardMaterial3D_1i5cd")
use_collision = true
size = Vector3(7.56142, 2.5674, 1.4806)

[node name="collision box2" type="CSGBox3D" parent="Environment/dock"]
transform = Transform3D(0.340735, 0.00587866, -6.44165, -0.0988622, 0.550784, 0.0164529, 1.99983, 0.0262266, 1.09836, 93.1355, -30.3747, -7.03218)
visible = false
material_override = SubResource("StandardMaterial3D_1i5cd")
use_collision = true
size = Vector3(7.56142, 5.4626, 0.563897)

[node name="collision box3" type="CSGBox3D" parent="Environment/dock"]
transform = Transform3D(0.340735, 0.00587866, -6.44165, -0.0988622, 0.550784, 0.0164529, 1.99983, 0.0262266, 1.09836, 92.0019, -30.3718, -6.8389)
visible = false
material_override = SubResource("StandardMaterial3D_1i5cd")
use_collision = true
size = Vector3(7.56142, 3.66245, 0.467606)

[node name="collision box4" type="CSGBox3D" parent="Environment/dock"]
transform = Transform3D(0.340735, 0.00587866, -6.44165, -0.0988622, 0.550784, 0.0164529, 1.99983, 0.0262266, 1.09836, 91.1216, -30.7828, -6.70922)
visible = false
material_override = SubResource("StandardMaterial3D_1i5cd")
use_collision = true
size = Vector3(7.56142, 3.66245, 0.467606)

[node name="collision box5" type="CSGBox3D" parent="Environment/dock"]
transform = Transform3D(0.340735, 0.00587866, -6.44165, -0.0988622, 0.550784, 0.0164529, 1.99983, 0.0262266, 1.09836, 88.994, -30.9437, -11.1078)
visible = false
material_override = SubResource("StandardMaterial3D_1i5cd")
use_collision = true
size = Vector3(0.002, 24.4961, 1.4806)

[node name="collision box6" type="CSGBox3D" parent="Environment/dock"]
transform = Transform3D(0.340735, 0.00587866, -6.44165, -0.0988622, 0.550784, 0.0164529, 1.99983, 0.0262266, 1.09836, 91.1339, -31.407, -1.85763)
visible = false
material_override = SubResource("StandardMaterial3D_1i5cd")
use_collision = true
size = Vector3(0.002, 24.4961, 1.4806)

[node name="LevelSwitcher" parent="." instance=ExtResource("5_h4dfl")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 74.7987, 3.08354, 0)
scene_name = "level-two"

[node name="island 3 bald" parent="." instance=ExtResource("6_sxj7l")]
transform = Transform3D(31.2525, -0.0356049, 0.0121218, 0.0214925, 51.7633, 0.00249012, -0.0248825, -0.00843509, 15.2272, 39.5785, 49.1297, -34.3083)

[node name="wood platform2" parent="." instance=ExtResource("7_peli5")]
transform = Transform3D(0.0300776, 0, -5.14411, 0, 5.14419, 0, 5.14411, 0, 0.0300776, 30.0305, -31.8722, -5.5906)

[node name="wood platform" parent="." instance=ExtResource("7_peli5")]
transform = Transform3D(-0.45424, 0, -4.53249, 0, 4.55519, 0, 4.53249, 0, -0.45424, 2.6197, -22.0234, -6.31017)

[node name="wood platform3" parent="." instance=ExtResource("7_peli5")]
transform = Transform3D(0.0300776, 0, -5.14411, 0, 5.14419, 0, 5.14411, 0, 0.0300776, 65.0683, -31.8722, -5.5906)

[node name="dock" parent="." instance=ExtResource("8_4xd6b")]
transform = Transform3D(0.382018, 0, -8.52431, 0, 8.53287, 0, 8.52431, 0, 0.382018, -27.3482, -17.4205, 9.13233)

[node name="island 4 bald" parent="." instance=ExtResource("9_v6qtu")]
transform = Transform3D(10.2662, 0, 0, 0, 10.2662, 0, 0, 0, 10.2662, -127.384, -32.9655, 31.431)

[connection signal="turn_around" from="Characters Scripts and World Settings/Player" to="Characters Scripts and World Settings/CameraSystem" method="_on_player_turn_around"]
